// 分支和循环语句 for循环

// for (表达式1；表达式2；表达式3)
//      循环语句
// 表达式1是初始化部分(只执行一次)  表达式2是条件判断部分  表达式3是调整部分


// 1. 尽量不要在循环内部修改循环变量，防止for循环失去控制
// 2. 建议for语句的循环控制变量的取值采用“前闭后开区间”


// for循环判断部分省略，意味着判断恒成立

#include <stdio.h>

/*int main()
{
    int i = 0;
    for (i = 1; i <= 10; i++)
    {
        if (i == 5)
            // break; // 1 2 3 4 永久终止循环(只能结束所在的循环)
            continue; // 1 2 3 4 6 7 8 9 10 跳过后面的代码，直接继续循环
        printf("%d ", i);
    }
    return 0;
}*/


/*
int main()
{
    //int arr[10] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
    //// 0~9
    //int i = 0;
    //for (i = 0; i < 10; i++) // 建议写i<10，而不是i<=9  10代表循环10次
    //{
    //    printf("%d ", arr[i]);
    //}

    int i = 0;
    for (i = 100; i <= 200; i++) // 打印100~200
    {
        printf("%d ", i);
    }
    return 0;
}*/


/*int main()
{
    //for (;;)
    //{
    //    printf("hehe\n");
    //}

    int i = 0;
    int j = 0;
    for (i = 0; i < 3; i++) // for(int i = 0;...) C99语法和C++支持
    {
        for (j = 0; j < 3; j++)
        {
            printf("hehe\n");
        }
    }
    return 0;
}*/


int main()
{
    int i = 0;
    int j = 0;
    for(i = 0, j = 0; j = 0; i++, j++) // 循环0次  j=0是赋值0，表明判断语句为假，因此不循环
        j++;
    return 0;
}
