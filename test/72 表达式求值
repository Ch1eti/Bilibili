//表达式求值

//1.隐式类型转换
//2.
//
//


///1.隐式类型转换
/*
//大小小于整形的类型 进行计算时会发生
//整型提升
//int  4byte - 32bit
//char 1byte - 8bit

#include <stdio.h>

//int main()
//{
//    char a = 5;
//    //00000000000000000000000000000101
//    //00000101 - a
//
//    char b = 126;
//    //00000000000000000000000001111110
//    //01111110 - b
//
//    char c = a + b;
//    //00000000000000000000000000000101 - a
//    //00000000000000000000000001111110 - b
//    //00000000000000000000000010000011 - a+b
//    //10000011 - c
//    //11111111111111111111111110000011 - 补码
//    //11111111111111111111111110000010
//    //10000000000000000000000001111101 - 原码
//    //-125
//    printf("%d\n", c);
//
//    return 0;
//}

//int main()
//{
//    char a = 0xb6;  // 10110110
//    short b = 0xb600;  // 1011011000000000
//    int c = 0xb6000000;  // 10110110000000000000000000000000
//
//    if (a == 0xb6)
//        printf("a\n");
//
//    if (b == 0xb600)
//        printf("b\n");
//
//    if (c == 0xb6000000)
//        printf("c\n");
//
//    return 0;
//}

int main()
{
    char c = 1;

    printf("%u\n", sizeof(c));  // 1
    printf("%u\n", sizeof(+c)); // 4
    printf("%u\n", sizeof(-c)); // 4

    return 0;
}
*/

///2.算术转换
// long double
// double
// float
// unsigned long int
// long int
// unsigned int
// int

///3.操作符属性

//复杂表达式的求值有三个影响因素:
//1.操作符优先级
//2.操作符结合性
//3.是否控制求值顺序

#include <stdio.h>

int main()
{
    int a = 1;
    int b = (++a) + (++a) + (++a); //谭浩强代码
    printf("%d\n", b);

    return 0;
}

//ebp 是寄存器
//ebp中存放的是地址
//ebp-8也是地址
