// 分支和循环语句 do...while循环练习

// 1. 计算n的阶乘
// 2. 计算1!+2!+3!+...+10!
// 3. 在一个有序数组中查找具体的某个数字n



#include <stdio.h>


// 计算n的阶乘
/*int main()
{
    int i = 1;
    int n = 0;
    int factorial = 1;
    scanf("%d", &n);
    for (i = 1; i <= n; i++)
    {
        factorial = factorial * i;
    }
    printf("%d\n", factorial);
    return 0;
}*/


// 计算1!+2!+3!+...+10!
/*int main()
{
    int i = 1;
    int n = 0;
    int factorial = 1;
    int sum = 0;

    for (n = 1; n <= 10; n++)
    {
        factorial = factorial * n;
        sum = sum + factorial;
    }
    printf("%d", sum);
    return 0;
}*/



// 在一个有序数组中查找具体的某个数字n
int main()
{
    int arr[] = {1,2,3,4,5,6,7,8,9,10};
    int k = 7;
    // 在一个有序数组中查找具体的某个数字n
    int i = 0;
    int sz = sizeof(arr) / sizeof(arr[0]);


    // 方法一  没用用到数组是有序的
    // for (i = 0; i < sz; i++)
    //{
    //    if (arr[i] == k)
    //    {
    //        printf("here is it. its NO. is: %d\n", i);
    //        break;
    //    }
    //}
    //
    //if (i == sz)
    //{
    //   printf("cannot find it.\n");
    //}


    // 方法二  运用了有序性  (折半查找/二分查找)
    int left = 0;
    int right = sz - 1;

    while (left <= right)
    {
        int mid = (left + right) / 2;
        if (arr[mid] < k)
        {
            left = mid +1;
        }
        else if (arr[mid] > k)
        {
            right = mid - 1;
        }
        else
        {
            printf("here is it. its NO. is: %d\n", mid);
            break;
        }
    }

    if(left > right)
    {
        printf("cannot find it.\n");
    }
    return 0;
}
