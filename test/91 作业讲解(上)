//作业讲解(上)
#include <stdio.h>

//gitee-github  git本地管理

//short*一次访问两个字节

//1.BC51 三角形判断
//2.使用指针打印数组内容
//3.字符串逆序
//4.计算求和
//5.打印水仙花数


///1.BC51 三角形判断
//有多组输入数据，每一行输入三个a,b,c(0<a,b,c<100)，作为三角形的三个便，用空格分隔
//针对每组输入数据，输出占一行，如果能构成三角形，则输出三角形类型；繁殖输出“Not a triangle!”
/*
int main()
{
    int a = 0;
    int b = 0;
    int c = 0;
    while (scanf("%d %d %d", &a, &b, &c) == 3)
    {
        //判断
        if ((a + b > c) && (a + c > b) && (b + c > a))
        {
            if ((a == b && b != c) || (b == c && c != a) || (a == c && c != b)) //等腰三角形
                printf("Isosceles triangle!\n");
            else if ((a == b) && (b == c)) //等边三角形
                printf("Equilateral triangle!\n");
            else //普通三角形
                printf("Ordinary triangle!\n");
        }
        else
            printf("Bot a triangle!\n");
    }

    return 0;
}*/

///2.使用指针打印数组内容
//写一个函数打印arr数组的内容，不使用数组下标，使用指针
/*
void print(int* p, int sz)
{
    int i = 0;
    for (i = 0; i < sz; i++)
    {
        printf("%d ", *(p + i));
    }
    printf("\n");
}

int main()
{
    int arr[] = { 1,2,3,4,5,6,7,8,9,10 };
    int sz = sizeof(arr) / sizeof(arr[0]);

    print(arr, sz);

    return 0;
}*/

///3.字符串逆序
//写一个函数，可以逆序一个字符串的内容
/*
#include <string.h>

void swap(char* arr)
{
    int left = 0;
    int right = strlen(arr) - 1;

    while (left < right)
    {
        char tmp = arr[left];
        arr[left] = arr[right];
        arr[right] = tmp;
        left++;
        right--;
    }
    printf("%s\n", arr);
}

int main()
{
    char arr[10001] = {0};
    gets(arr);
    //逆序
    swap(arr);

    return 0;
}*/

///4.计算求和
//求Sn= a + aa + aaa + aaaa + aaaaa的前n项之和。其中a是一个数字
/*
int main()
{
    int a = 0;
    int n = 0;
    scanf("%d %d", &a, &n);
    int sum = 0;
    int k = 0;

    int i = 0;
    for (i = 0; i < n; i++)
    {
        k = k * 10 + a;
        sum += k;
    }
    printf("%d\n", sum);

    return 0;
}*/

///5.打印水仙花数
//打印0~10000之间 所有的"水仙花数"
//"水仙花数" 是指一个n位数，其各位数字的n次方之和恰好等于该数本身，例如153=1^3+5^3+3^3

#include <math.h>

int is_narcissistic_num(int i)
{
    //1.计算i是几位数 - n
    int n = 1;
    int tmp = i;
    int sum = 0;
    while (tmp / 10) {
        n++;
        tmp /= 10;
    }
    //2.得到i的每一位，计算它的n次方之和
    tmp = i;
    while (tmp) {
        sum += pow(tmp % 10, n);
        tmp /= 10;
    }
    //判断是不是水仙花数，是则返回1；不是则返回0
    return sum == i;//sum == i则返回1，!=则返回0
}

int main()
{
    int i = 0;
    for (i = 0; i <= 100000; i++)
    {
        //判断i是不是"水仙花数"
        if (is_narcissistic_num(i))
            printf("%d ", i);
    }

    return 0;
}



